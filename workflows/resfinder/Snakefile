configfile: "config.yaml"

species, samples = glob_wildcards(config["samples_dir"]+"/{species}/{samples}.fna")

rule all:
    input:
        "results/args_table.csv"

rule download_databases:
    output:
        directory("databases")
    shell:
        """
        git clone https://bitbucket.org/genomicepidemiology/resfinder_db/ databases/resfinder_db
        """
        #git clone https://bitbucket.org/genomicepidemiology/pointfinder_db/ databases/pointfinder_db # Not needed anymore

rule compute_args:
    input:
        fasta=config["samples_dir"]+"/{specie_id}/{sample}.fna",
        databases_folder="databases/"
    output:
        temp(directory("results/args/{specie_id}/{sample}"))
    conda:
        "envs/resfinder.yaml"
    shell:
        """
        python -m resfinder -o {output} \
        --min_cov 0.6 --threshold 0.8 --acquired -ifa {input.fasta} \
        -db_res {input.databases_folder}/resfinder_db
        """
rule parse_results:
    input:
        results_dir="results/args/{specie_id}/{sample}"
    output:
       temp( "results/args_parsed/{specie_id}/{sample}.json")
    conda:
        "envs/parsing.yaml"
    shell:
        """
        python scripts/resfinder_parser.py \
        --results-dir {input.results_dir} \
        --output {output}
        """

rule create_table:
    input:
        expand("results/args_parsed/{specie_id}/{sample}.json",
               zip, specie_id=species, sample=samples)
    output:
        "results/args_table.csv"
    conda:
        "envs/parsing.yaml"
    shell:
        "python scripts/create_table.py {input} --output {output}"
