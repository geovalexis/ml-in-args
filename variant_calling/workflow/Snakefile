REF_GENOME = "../data/reference_genome/GCA_000393015.1_Ente_faec_T5_V1_genomic.fna"
SAMPLES = ["1351.832"]

rule all:
    input:
        "results/all.filtered.snps.extract.tsv"

rule map_reads:
    input:
        REF_GENOME,
        "../data/example_inputs/{sample}.fna"
    output:
        temp("results/mapped/{sample}.bam")
    conda:
        "envs/mapping.yaml"
    shell:
        "bwa mem -t {threads} {input} | samtools view -Sb - > {output}"

rule sort_alignments:
    input:
        "results/mapped/{sample}.bam"
    output:
        temp("results/mapped/{sample}.sorted.bam")
    conda:
        "envs/mapping.yaml"
    shell:
        "samtools sort -o {output} {input}"

rule call_variants:
    input:
        ref=REF_GENOME,
        bam=expand("results/mapped/{sample}.sorted.bam", sample=SAMPLES)
    output:
        temp("results/calls/all.vcf.gz")
    conda:
        "envs/calling.yaml"
    shell:
        "bcftools mpileup -f {input.ref} {input.bam} | bcftools call -mv -Oz > {output}"

rule filter_variants:
    input:
        "results/calls/all.vcf.gz"
    output:
        temp("results/filters/all.filtered.vcf")
    conda:
        "envs/filtering.yaml"
    shell:
        "vcftools --gzvcf {input} --minQ 4 --minDP 10 --max-missing 0.2 --minQ 30 --recode --recode-INFO-all --stdout > {output}"

rule keep_only_snps:
    input:
        "results/filters/all.filtered.vcf"
    output:
        temp("results/filters/all.filtered.snps.vcf")
    conda:
        "envs/filtering.yaml"
    shell:
        "vcftools --vcf {input} --remove-indels --recode --recode-INFO-all --stdout > {output}"

rule select_columns:
    input:
        "results/filters/all.filtered.snps.vcf"
    output:
        "results/all.filtered.snps.extract.tsv"
    conda:
        "envs/calling.yaml"
    shell:
        "bcftools query -f '%CHROM\t%POS\t%REF\t%ALT\t[%TGT]\n' {input} -o {output}"