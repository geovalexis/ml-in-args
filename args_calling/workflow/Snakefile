configfile: "config/config.yaml"
samples = [os.path.splitext(entry.name)[0] for entry in os.scandir(config["samples_dir"]) if entry.is_file()]

rule all:
    input:
        "results/args_table.csv"

rule download_databases:
    output:
        directory("databases")
    shell:
        """
        git clone https://bitbucket.org/genomicepidemiology/resfinder_db/ databases/resfinder_db
        git clone https://bitbucket.org/genomicepidemiology/pointfinder_db/ databases/pointfinder_db
        """

rule compute_args:
    input:
        fasta=config["samples_dir"]+"/{sample}.fna",
        databases_folder="databases/"
    output:
        temp(directory("results/args/{sample}"))
    conda:
        "envs/resfinder.yaml"
    shell:
        """
        python -m resfinder -o {output} -s '{config[specie]}' \
        --min_cov 0.6 --threshold 0.8 --acquired --point -ifa {input.fasta} \
        -db_res {input.databases_folder}/resfinder_db \
        -db_point {input.databases_folder}/pointfinder_db
        """
rule parse_results:
    input:
        results_dir="results/args/{sample}"
    output:
       temp( "results/args_parsed/{sample}.json")
    conda:
        "envs/parsing.yaml"
    shell:
        """
        python workflow/scripts/resfinder_parser.py \
        --results-dir {input.results_dir} \
        --output {output}
        """

rule create_table:
    input:
        expand("results/args_parsed/{sample}.json", sample=samples)
    output:
        "results/args_table.csv"
    conda:
        "envs/parsing.yaml"
    shell:
        "python workflow/scripts/create_table.py {input} --output {output}"
